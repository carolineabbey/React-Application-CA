{"ast":null,"code":"var _jsxFileName = \"/workspaces/React-Application-CA/src/components/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar({\n  initialMenuItems\n}) {\n  _s();\n  let [menuItems, setMenuItems] = useState(initialMenuItems);\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  let [filter, setFilter] = useState(\"\");\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\") {\n      setMenuItems([...menuItems, newMenuItem]);\n      setNewMenuItem(\"\");\n    }\n  }, [menuItems, newMenuItem]);\n  const filteredMenuItems = menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase()));\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\n  // its own item.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addMenuItem();\n      },\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"9uJAaehHQ/xgclC4QpFfGNnjx2E=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useState","useCallback","jsxDEV","_jsxDEV","Sidebar","initialMenuItems","_s","menuItems","setMenuItems","newMenuItem","setNewMenuItem","filter","setFilter","addMenuItem","trim","filteredMenuItems","item","toLowerCase","includes","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","event","target","onClick","placeholder","_c","$RefreshReg$"],"sources":["/workspaces/React-Application-CA/src/components/Sidebar.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\"\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\n\n\nexport default function Sidebar({initialMenuItems}) {\n  let [menuItems, setMenuItems] = useState(initialMenuItems);\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  let [filter, setFilter] = useState(\"\");\n\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim() !== \"\"){\n      setMenuItems([...menuItems, newMenuItem]);\n      setNewMenuItem(\"\");\n    }\n  }, [menuItems, newMenuItem]);\n    \n  const filteredMenuItems = menuItems.filter((item) =>\n    item.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\n  // its own item.\n  return (\n    <div>\n      <ul>\n      {filteredMenuItems.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n      <input\n        type=\"text\"\n        id=\"newMenuItemValue\"\n        value={newMenuItem}\n        onChange={(event) => setNewMenuItem(event.target.value)}\n      ></input>\n      <br />\n      <button\n        onClick={() => {\n          addMenuItem();\n        }}\n      >\n        Add Item\n      </button>\n      <br />\n      <input\n        id=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)}\n        placeholder=\"Filter by...\"\n      ></input>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAOA,eAAe,SAASC,OAAOA,CAAC;EAACC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAClD,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACK,gBAAgB,CAAC;EAC1D,IAAI,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAI,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,IAAIa,WAAW,GAAGZ,WAAW,CAAC,MAAM;IAClC,IAAIQ,WAAW,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;MAC5BN,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEE,WAAW,CAAC,CAAC;MACzCC,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,SAAS,EAAEE,WAAW,CAAC,CAAC;EAE5B,MAAMM,iBAAiB,GAAGR,SAAS,CAACI,MAAM,CAAEK,IAAI,IAC9CA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,MAAM,CAACM,WAAW,CAAC,CAAC,CAClD,CAAC;;EAED;EACA;;EAEA;EACA;EACA,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EACCJ,iBAAiB,CAACK,GAAG,CAAC,CAACJ,IAAI,EAAEK,KAAK,kBAC/BlB,OAAA;QAAAgB,QAAA,EAAiBH;MAAI,GAAZK,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,kBAAkB;MACrBC,KAAK,EAAEnB,WAAY;MACnBoB,QAAQ,EAAGC,KAAK,IAAKpB,cAAc,CAACoB,KAAK,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACTtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNtB,OAAA;MACE6B,OAAO,EAAEA,CAAA,KAAM;QACbnB,WAAW,CAAC,CAAC;MACf,CAAE;MAAAM,QAAA,EACH;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNtB,OAAA;MACEwB,EAAE,EAAC,QAAQ;MACXD,IAAI,EAAC,MAAM;MACXE,KAAK,EAAEjB,MAAO;MACdkB,QAAQ,EAAGC,KAAK,IAAKlB,SAAS,CAACkB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;MACnDK,WAAW,EAAC;IAAc;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CApDuBF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}